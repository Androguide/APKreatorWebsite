#!/bin/bash

# Placeholder values filled by the server
package="placeholder"
appname="placeholder"
colorscheme="placeholder"
url="placeholder"
random="placeholder"

# Create a unique copy of the base container for each user
mkdir build/$random
cp -rf build/CONTAINER/* build/$random
wait $!

# Replace the resources values which are not modifiable after compilation
sed -i "s/APKreator/${appname}/g" build/$random/APKreator/res/values/strings.xml
sed -i "s/com.androguide.apkreator/${package}/g" build/$random/APKreator/build.gradle
sed -i "s/#FF1337/${colorscheme}/g" build/$random/APKreator/res/values/colors.xml

# Download the user's icon and use it as the plugin's icon.png
curl $url > build/$random/APKreator/assets/icon.png
wait $!

# Copy the user's icon to drawable-xxhdpi to set it as the launcher icon.
# The framework will take care of scaling it down for each screen size.
# TODO: integrate with Android Assets Studio
cp -f build/$random/APKreator/assets/icon.png build/$random/APKreator/res/drawable-xxhdpi/ic_launcher.png
cp -f build/$random/APKreator/assets/icon.png build/$random/APKreator/res/drawable-xxhdpi/logo.png

# copy the config.xml generated by the server to the user's assets
cp -f $random.xml build/$random/APKreator/assets/config.xml

# Launch the build and wait for it to be complete
cd build/$random/ && ./gradlew assembleRelease
wait $!

cd ../../
DATE=$(date +"%Y%m%d%H%M");
mkdir www/out/$random
cp -f build/$random/APKreator/build/apk/APKreator-release.apk www/out/$random/$package.apk

# Clean-up
rm -f $random.xml && rm -rf build/$random
